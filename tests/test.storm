5
file:bytes:.seen@=(1, 2)
foo:bar -+> wat:no
function wat(n) {
    if $n {
        return ( 4 )
    }
    return (5)
}
$a + 4
#aka
#aka.foo
#aka.foo.bar #foobar
#aka.sei.mal.foobar@=(1, 2)
+#aka.sei.mal.foobar foobar +#aka.foo.bar
file:bytes +#aka93.kaspersky1.foo.mal.wat
for x in $foobar {
    $lib.print('wat\' superwat \' "foobar"') | spin
    $lib.print("wat' superwat ' \"foobar\"") | spin
}
True
False
yield [it:reveng:function = $lib.guid()]

wat:neato // a shameless comment


inet:ipv4 -> inet:dns:a | limit 10
inet:ipv4=1.2.3.4
syn:tag~=gh0st
inet:ipv4=1.2.3.4
foo=0x2355
a + b
a - b
a*in=wat
a in b
foo | bar
foo:bar?=wat
file:bytes:size>=4399
file:bytes:size<=0x4490
file:bytes:size>10
file:bytes:size<10
file:bytes=sha256:aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
340
delnode
iden
spin
sleep
count
inet:ipv4 -> inet:dns:a | count | spin
inet:ipv4 -+> inet:dns:a | count | spin
foo:bar <+- bar:baz
foo:bar :foo <- bar:baz
foo:bar :.seen=123
foo:bar:.seen
foo:bar:.seen:.created
/*
Foo bar baz
*/

{ This should not be highlighted as (except for the not and the for and the and :))}
+{Yar, this be a subquery}
-{This also be one of them subqueries}

try catch

"neato"

'''
Neato burrito
'''
foob
